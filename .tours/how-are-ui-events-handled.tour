{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "How are UI events handled?",
  "steps": [
    {
      "file": "src/main/java/com/example/PaintWindow.java",
      "description": "The Paint application has controls for changing the drawing tools, clearing the contents of the canvas, and undoing the last thing that the user drew on the canvas.\r\n\r\nWhen activated, these controls perform actions specific to the control. Instead of defining these actions in an event handler for each individual control, the actions are defined in an instance of an Actions class. This allows these actions to be associated with multiple controls and avoids duplicating code for every control that can invoke this action.",
      "line": 51
    },
    {
      "file": "src/main/java/com/example/PaintWindow.java",
      "description": "Here we create the button that will allow the user to clear the canvas. In the JButton constructor, we pass in clearAction, an instance of an Action defined in the Actions class. This action will effectively listen for events emitted by the clear button. In this particular case, it will listen for the click event on the button.",
      "line": 58
    },
    {
      "file": "src/main/java/com/example/Actions.java",
      "description": "Here is where the clear action is defined. The clearAction is an instance of an AbstractAction. ",
      "line": 15
    },
    {
      "file": "src/main/java/com/example/Actions.java",
      "description": "The actionPerformed function is invoked whenever the component, which the action is attached to, emits an event that the action is listening for. In the case of the clear button, the actionPerformed function is invoked whenever the clear button is clicked. Details about the particular event are passed in the actionEvent parameter.",
      "line": 16
    },
    {
      "file": "src/main/java/com/example/Actions.java",
      "description": "This action simply calls a function that is exposed by the PaintWindow object itself. The particular instance of PaintWindow was passed in to the Actions constructor.",
      "line": 18
    },
    {
      "file": "src/main/java/com/example/PaintWindow.java",
      "description": "The PaintWindow class contains an instance of a PaintCanvas. This is the class that is responsible for capturing all of the drawing activity that the user performs. The canvas exposes a clear method so the PaintWindow just calls that.",
      "line": 178
    },
    {
      "file": "src/main/java/com/example/PaintCanvas.java",
      "description": "To clear the canvas, we begin by copying the current contents of the canvas into the history object, so that it can be restored if the user chooses to undo the action. Then we simply remove all elements from the canvas and repaint it, resulting in an empty canvas.",
      "line": 86
    }
  ]
}