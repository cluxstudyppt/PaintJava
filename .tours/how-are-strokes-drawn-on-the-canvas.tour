{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "How are strokes drawn on the canvas?",
  "steps": [
    {
      "file": "src/main/java/com/example/PaintWindow.java",
      "description": "The PaintWindow contains an instance of a PaintObjectConstructor. This class is responsible for responding to the mouse click, move and release events that the user performs on the application canvas.\r\n\r\nIn the lines of code above the object constructor is initialised. By default, the object constructor is set to construct pencil objects on the canvas (i.e., free form strokes) in the color green, thickness 5. The last two lines above set the object constructor as a subscriber to any  mouse or mouse motion events that take place on the canvas.",
      "line": 156
    },
    {
      "file": "src/main/java/com/example/PaintObjectConstructor.java",
      "description": "When the user presses the mouse down on the canvas, the mousePressed function is invoked. This function instantiates a Vector which will be used to gather every point on the canvas where the user clicks and drags the mouse. \r\n\r\nWe then create a temporary PaintObject of the same type as defined in the paintObjectClass field. An instance of any class that derives from PaintObject can be assigned.\r\n\r\nFinally we pass in the points gathered so far to the define function.",
      "line": 56
    },
    {
      "file": "src/main/java/com/example/PaintWindow.java",
      "description": "After the user initiates drawing by clicking on the canvas, the PaintObject that is formed based on where they just clicked is stored as a temporary object. ",
      "line": 184
    },
    {
      "file": "src/main/java/com/example/PaintObjectConstructor.java",
      "description": "As the user drags the mouse, more points are added to the pointsGathered Vector. These points are then passed in to the define function of the temporaryObject which effectively replaces the existing array of points with this new array. Finally, constructionContinuing is called to inform the window that the mouse is effectively still being dragged and that points will still be collected.",
      "line": 67
    },
    {
      "file": "src/main/java/com/example/PaintObjectConstructor.java",
      "description": "Finally, when the mouse is released, we collect the last point where the mouse released event happened, update the temporary object and then call constructionComplete.",
      "line": 75
    },
    {
      "file": "src/main/java/com/example/PaintWindow.java",
      "description": "Since the user has stopped drawing on the canvas, we set the temporary object to null. We add the newly formed PaintObject to the canvas, making it permanent, and then enable the undo action.",
      "line": 198
    },
    {
      "file": "src/main/java/com/example/PaintCanvas.java",
      "description": "When we add a PaintObject to the canvas we also add it to the history object. The history object keeps track of every state of the canvas. The paintObjects Vector is effectively a list of the PaintObjects that are currently displayed on the canvas. We copy that list and then add it to the history object.\r\n\r\nAfter adding the newObject to the list of paintObjects to be drawn on the canvas we call repaint which ensures that the list of paintObjects is indeed drawn on the cavas.",
      "line": 78
    }
  ]
}